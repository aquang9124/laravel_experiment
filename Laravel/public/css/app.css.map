{"version":3,"sources":["../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_box-sizing.scss","app.scss","../../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_outer-container.scss","../../../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-em.scss","../../../node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss"],"names":[],"mappings":"AAGE;EACE,uBAAuB,EACxB;;AAED;EAII,oBAAoB,EACrB;;ACLL;EACC,YAHW;EAIX,aAHY,EAIZ;;AAED;ECoBE,gBCrBe;EDsBf,kBACa;EADb,mBAEc;EDrBf,mBAAmB;EACnB,mBAAmB,EACnB;EAJD;IGQI,YAAY;IACZ,YAAY;IACZ,eAAe,EAChB","file":"app.css","sourcesContent":["@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","// @import \"node_modules/bootstrap-sass/assets/stylesheets/bootstrap\";\n@import \"node_modules/bourbon/app/assets/stylesheets/_bourbon.scss\";\n@import \"node_modules/bourbon-neat/app/assets/stylesheets/_neat.scss\";\n\n$red: red;\n$width: 100%;\n$height: 100%;\nhtml, body {\n\twidth: $width;\n\theight: $height;\n}\n\nsection {\n\t@include outer-container;\n\ttext-align: center;\n\tmargin-bottom: 3em;\n}\n\n\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n"],"sourceRoot":"/source/"}